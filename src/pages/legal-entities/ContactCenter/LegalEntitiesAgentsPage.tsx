
import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Search, Plus, Filter } from 'lucide-react';
import AgentsList from '@/components/ContactCenter/AgentsList';
import AgentDetails from '@/components/ContactCenter/AgentDetails';
import { Agent } from '@/types/contactCenter';

// –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤
const mockAgents: Agent[] = [
  {
    id: '1',
    name: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞',
    status: 'online',
    activeDialogs: 2,
    skills: ['–∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏', 'B2B –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏', '—Ç–æ–ø–ª–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç—ã'],
    avatar: 'https://i.pravatar.cc/100?img=1'
  },
  {
    id: '2',
    name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤',
    status: 'busy',
    activeDialogs: 1,
    skills: ['—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã', '–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏', 'API –ø–æ–¥–¥–µ—Ä–∂–∫–∞']
  },
  {
    id: '3',
    name: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
    status: 'offline',
    activeDialogs: 0,
    skills: ['–ø–ª–∞—Ç–µ–∂–∏ –∏ —Å—á–µ—Ç–∞', '–¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç', '—é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã']
  },
  {
    id: '4',
    name: '–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤',
    status: 'online',
    activeDialogs: 3,
    skills: ['—Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞', '–∞–Ω–∞–ª–∏—Ç–∏–∫–∞', '–æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å']
  },
];

const LegalEntitiesAgentsPage: React.FC = () => {
  const [searchQuery, setSearchQuery] = useState('');
  const [statusFilter, setStatusFilter] = useState('all');
  const [skillFilter, setSkillFilter] = useState('all');
  const [selectedAgent, setSelectedAgent] = useState<Agent | null>(null);
  const [agents] = useState<Agent[]>(mockAgents);

  const filteredAgents = agents.filter(agent => {
    const matchesSearch = agent.name.toLowerCase().includes(searchQuery.toLowerCase());
    const matchesStatus = statusFilter === 'all' || agent.status === statusFilter;
    const matchesSkill = skillFilter === 'all' || agent.skills.includes(skillFilter);
    
    return matchesSearch && matchesStatus && matchesSkill;
  });

  const handleAgentSelect = (agent: Agent) => {
    setSelectedAgent(agent);
  };

  const allSkills = Array.from(new Set(agents.flatMap(agent => agent.skills)));

  return (
    <div className="flex h-[calc(100vh-12rem)]">
      {/* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –∏ —Å–ø–∏—Å–∫–æ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ */}
      <div className="w-1/3 pr-4 flex flex-col">
        <Card className="mb-4">
          <CardContent className="pt-4">
            <div className="flex gap-2 mb-4">
              <div className="relative flex-1">
                <Search className="absolute left-2 top-2.5 h-4 w-4 text-muted-foreground" />
                <Input
                  placeholder="–ü–æ–∏—Å–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤..."
                  className="pl-8"
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                />
              </div>
              <Button variant="outline" size="icon">
                <Filter className="h-4 w-4" />
              </Button>
            </div>
            
            <div className="flex gap-2">
              <Select value={statusFilter} onValueChange={setStatusFilter}>
                <SelectTrigger className="w-1/2">
                  <SelectValue placeholder="–°—Ç–∞—Ç—É—Å" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="all">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</SelectItem>
                  <SelectItem value="online">–û–Ω–ª–∞–π–Ω</SelectItem>
                  <SelectItem value="busy">–ó–∞–Ω—è—Ç—ã</SelectItem>
                  <SelectItem value="offline">–û—Ñ—Ñ–ª–∞–π–Ω</SelectItem>
                </SelectContent>
              </Select>
              
              <Select value={skillFilter} onValueChange={setSkillFilter}>
                <SelectTrigger className="w-1/2">
                  <SelectValue placeholder="–ù–∞–≤—ã–∫" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="all">–í—Å–µ –Ω–∞–≤—ã–∫–∏</SelectItem>
                  {allSkills.map(skill => (
                    <SelectItem key={skill} value={skill}>{skill}</SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>
          </CardContent>
        </Card>
        
        <Card className="flex-1 overflow-hidden">
          <CardHeader className="py-3 flex justify-between items-center">
            <CardTitle className="text-lg">
              –û–ø–µ—Ä–∞—Ç–æ—Ä—ã –Æ–õ
              <span className="text-sm font-normal text-muted-foreground ml-2">
                ({filteredAgents.length})
              </span>
            </CardTitle>
            <Button size="sm" className="bg-logaz-blue">
              <Plus className="h-4 w-4 mr-1" /> –î–æ–±–∞–≤–∏—Ç—å
            </Button>
          </CardHeader>
          <CardContent className="p-0 h-[calc(100%-4rem)] overflow-y-auto">
            <AgentsList 
              agents={filteredAgents}
              selectedId={selectedAgent?.id}
              onSelectAgent={handleAgentSelect}
            />
          </CardContent>
        </Card>
      </div>
      
      {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –¥–µ—Ç–∞–ª—è–º–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ */}
      <div className="w-2/3 pl-4">
        {selectedAgent ? (
          <AgentDetails agent={selectedAgent} />
        ) : (
          <Card className="h-full flex items-center justify-center">
            <CardContent className="text-center p-6">
              <div className="h-12 w-12 mx-auto text-muted-foreground mb-4 rounded-full bg-muted flex items-center justify-center">
                <span className="text-2xl">üë§</span>
              </div>
              <h3 className="text-lg font-medium mb-2">–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞</h3>
              <p className="text-muted-foreground">
                –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–ª–µ–≤–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π
              </p>
            </CardContent>
          </Card>
        )}
      </div>
    </div>
  );
};

export default LegalEntitiesAgentsPage;
